blueprint:
  name: ZHA - Aqara Radiator Valve External Temperature Updater
  domain: automation
  author: David Kalbermatten
  homeassistant:
    min_version: 2025.8.0
  source_url: https://gist.github.com/david-kalbermatten/f48c8d786738c95f21259724ddfbd962#file-aqara-radiator-external-temp-yaml
  description: >
    Sets an external temperature sensor readout on an Aqara Zigbee radiator
    valve  using ZHA. Updates are triggered periodically (every 30 minutes) and upon relevant entity
    state changes.
  input:
    radiator:
      name: Radiator Valve
      description: The Aqara Zigbee radiator valve to be updated
      selector:
        device:
          filter:
            - integration: zha
              manufacturer: LUMI
              model: lumi.airrtc.agl001
    temp_sensor:
      name: Temperature Sensor
      description: The temperature sensor used to provide external temperature
      selector:
        entity:
          filter:
          - domain:
            - sensor
            device_class:
            - temperature
          reorder: false
          multiple: false
    cluster_id:
      name: Cluster ID
      description: The cluster ID for the radiator valve (default is 64704)
      default: 64704
      selector:
        number:
          min: 0
          max: 65535
          mode: box
    anti_stuck:
      name: Anti-Stuck Procedure
      description: >
        Enable an anti-stuck procedure that periodically forces the radiator valve to re-evaluate its state 
        by temporarily setting it to a high temperature and then turning it off. Saves the original state and temperature and restores 
        them after the procedure. Runs daily. Useful if the valve tends to get stuck in a certain position.
      default: false
      selector:
        boolean:
    anti_stuck_time:
      name: Anti-Stuck Time
      description: Time of day to run the anti-stuck procedure (if enabled)
      default: '15:00'
      selector:
        time:
mode: restart
max_exceeded: silent
trigger_variables:
  device_id: !input radiator
  climate_id: '{{ device_entities(device_id) | select("match", "^climate\.") | list | first}}'

trigger:
- id: 'periodic-update'
  platform: time_pattern
  minutes: /30
- id: 'anti-stuck'
  platform: time
  at: !input anti_stuck_time
- platform: state
  entity_id: !input temp_sensor
- platform: template
  value_template: '{{ states(climate_id) == "heat" }}'
  for: '00:01:00'
condition:
- or:
  - condition: template
    value_template: '{{ states(climate_id) == "heat" }}'
  - condition: trigger
    id: 
     - periodic-update
  - condition: trigger
    id: 
     - anti-stuck
action:
- variables:
    ieee: '{{ (device_attr(device_id, "identifiers") | selectattr(0, "equalto", "zha") | list | first)[1] }}'
    temp_sensor_id: !input temp_sensor
    temp_sensor_value: '{{ (states(temp_sensor_id) |float |round(1) * 100 ) |int }}'
    original_hvac_mode: '{{ states(climate_id) }}'
    original_temp: '{{ state_attr(climate_id, "temperature") }}'
- choose:
  - conditions:
    - condition: trigger
      id: anti-stuck
    sequence:
    - service: climate.set_hvac_mode
      target:
        entity_id: '{{ climate_id }}'
      data:
        hvac_mode: 'heat'
    - service: climate.set_temperature
      target:
        entity_id: '{{ climate_id }}'
      data:
        temperature: 30
    - delay:
        seconds: 20
    - service: climate.set_hvac_mode
      target:
        entity_id: '{{ climate_id }}'
      data:
        hvac_mode: 'off'
    - delay:
        seconds: 20
    - service: climate.set_hvac_mode
      target:
        entity_id: '{{ climate_id }}'
      data:
        hvac_mode: '{{ original_hvac_mode }}'
    - service: climate.set_temperature
      target:
        entity_id: '{{ climate_id }}'
      data:
        temperature: '{{ original_temp }}'
  default:
  - alias: Set Readout to External Temp Sensor
    service: zha.set_zigbee_cluster_attribute
    data:
      ieee: '{{ ieee }}'
      endpoint_id: 1
      cluster_id: !input cluster_id
      cluster_type: in
      attribute: 638
      value: '1'
  - delay:
      seconds: 3
  - alias: Update Radiator Temperature Value
    service: zha.set_zigbee_cluster_attribute
    data:
      ieee: '{{ ieee }}'
      endpoint_id: 1
      cluster_id: !input cluster_id
      cluster_type: in
      attribute: 5010
      value: '{{ temp_sensor_value }}'